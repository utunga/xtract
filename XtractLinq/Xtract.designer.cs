#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XtractLinq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="tweets")]
	public partial class XtractDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWord(Word instance);
    partial void UpdateWord(Word instance);
    partial void DeleteWord(Word instance);
    partial void InsertTweet(Tweet instance);
    partial void UpdateTweet(Tweet instance);
    partial void DeleteTweet(Tweet instance);
    partial void InsertTwuser(Twuser instance);
    partial void UpdateTwuser(Twuser instance);
    partial void DeleteTwuser(Twuser instance);
    #endregion
		
		public XtractDataContext() : 
				base(global::XtractLinq.Properties.Settings.Default.tweetsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public XtractDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XtractDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XtractDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XtractDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Word> Words
		{
			get
			{
				return this.GetTable<Word>();
			}
		}
		
		public System.Data.Linq.Table<Tweet> Tweets
		{
			get
			{
				return this.GetTable<Tweet>();
			}
		}
		
		public System.Data.Linq.Table<Twuser> Twusers
		{
			get
			{
				return this.GetTable<Twuser>();
			}
		}
		
		[Function(Name="dbo.SetTweetEnglishSimilarity")]
		public int SetTweetEnglishSimilarity([Parameter(DbType="BigInt")] System.Nullable<long> twitter_id, [Parameter(DbType="Float")] System.Nullable<double> english_similarity)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), twitter_id, english_similarity);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateStatsTables")]
		public int UpdateStatsTables()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.word")]
	public partial class Word : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _screen_name;
		
		private string _text;
		
		private System.Nullable<long> _twitter_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onscreen_nameChanging(string value);
    partial void Onscreen_nameChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void Ontwitter_idChanging(System.Nullable<long> value);
    partial void Ontwitter_idChanged();
    #endregion
		
		public Word()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_screen_name", DbType="NVarChar(255)")]
		public string screen_name
		{
			get
			{
				return this._screen_name;
			}
			set
			{
				if ((this._screen_name != value))
				{
					this.Onscreen_nameChanging(value);
					this.SendPropertyChanging();
					this._screen_name = value;
					this.SendPropertyChanged("screen_name");
					this.Onscreen_nameChanged();
				}
			}
		}
		
		[Column(Storage="_text", DbType="NVarChar(255)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[Column(Storage="_twitter_id", DbType="BigInt")]
		public System.Nullable<long> twitter_id
		{
			get
			{
				return this._twitter_id;
			}
			set
			{
				if ((this._twitter_id != value))
				{
					this.Ontwitter_idChanging(value);
					this.SendPropertyChanging();
					this._twitter_id = value;
					this.SendPropertyChanged("twitter_id");
					this.Ontwitter_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tweet")]
	public partial class Tweet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<long> _twitter_id;
		
		private string _screen_name;
		
		private string _text;
		
		private string _date_scanned;
		
		private string _date_tweeted;
		
		private System.Nullable<double> _english_similarity;
		
		private string _sample_reason;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontwitter_idChanging(System.Nullable<long> value);
    partial void Ontwitter_idChanged();
    partial void Onscreen_nameChanging(string value);
    partial void Onscreen_nameChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void Ondate_scannedChanging(string value);
    partial void Ondate_scannedChanged();
    partial void Ondate_tweetedChanging(string value);
    partial void Ondate_tweetedChanged();
    partial void Onenglish_similarityChanging(System.Nullable<double> value);
    partial void Onenglish_similarityChanged();
    partial void Onsample_reasonChanging(string value);
    partial void Onsample_reasonChanged();
    #endregion
		
		public Tweet()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_twitter_id", DbType="BigInt")]
		public System.Nullable<long> twitter_id
		{
			get
			{
				return this._twitter_id;
			}
			set
			{
				if ((this._twitter_id != value))
				{
					this.Ontwitter_idChanging(value);
					this.SendPropertyChanging();
					this._twitter_id = value;
					this.SendPropertyChanged("twitter_id");
					this.Ontwitter_idChanged();
				}
			}
		}
		
		[Column(Storage="_screen_name", DbType="NVarChar(255)")]
		public string screen_name
		{
			get
			{
				return this._screen_name;
			}
			set
			{
				if ((this._screen_name != value))
				{
					this.Onscreen_nameChanging(value);
					this.SendPropertyChanging();
					this._screen_name = value;
					this.SendPropertyChanged("screen_name");
					this.Onscreen_nameChanged();
				}
			}
		}
		
		[Column(Storage="_text", DbType="NVarChar(255)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[Column(Storage="_date_scanned", DbType="NVarChar(255)")]
		public string date_scanned
		{
			get
			{
				return this._date_scanned;
			}
			set
			{
				if ((this._date_scanned != value))
				{
					this.Ondate_scannedChanging(value);
					this.SendPropertyChanging();
					this._date_scanned = value;
					this.SendPropertyChanged("date_scanned");
					this.Ondate_scannedChanged();
				}
			}
		}
		
		[Column(Storage="_date_tweeted", DbType="NVarChar(255)")]
		public string date_tweeted
		{
			get
			{
				return this._date_tweeted;
			}
			set
			{
				if ((this._date_tweeted != value))
				{
					this.Ondate_tweetedChanging(value);
					this.SendPropertyChanging();
					this._date_tweeted = value;
					this.SendPropertyChanged("date_tweeted");
					this.Ondate_tweetedChanged();
				}
			}
		}
		
		[Column(Storage="_english_similarity", DbType="Float")]
		public System.Nullable<double> english_similarity
		{
			get
			{
				return this._english_similarity;
			}
			set
			{
				if ((this._english_similarity != value))
				{
					this.Onenglish_similarityChanging(value);
					this.SendPropertyChanging();
					this._english_similarity = value;
					this.SendPropertyChanged("english_similarity");
					this.Onenglish_similarityChanged();
				}
			}
		}
		
		[Column(Storage="_sample_reason", DbType="NVarChar(50)")]
		public string sample_reason
		{
			get
			{
				return this._sample_reason;
			}
			set
			{
				if ((this._sample_reason != value))
				{
					this.Onsample_reasonChanging(value);
					this.SendPropertyChanging();
					this._sample_reason = value;
					this.SendPropertyChanged("sample_reason");
					this.Onsample_reasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.twuser")]
	public partial class Twuser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<long> _twitter_user_id;
		
		private string _screen_name;
		
		private string _lang;
		
		private string _name;
		
		private string _url;
		
		private string _profile_image_url;
		
		private System.Nullable<int> _follower_count;
		
		private System.Nullable<double> _english_similarity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontwitter_user_idChanging(System.Nullable<long> value);
    partial void Ontwitter_user_idChanged();
    partial void Onscreen_nameChanging(string value);
    partial void Onscreen_nameChanged();
    partial void OnlangChanging(string value);
    partial void OnlangChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void Onprofile_image_urlChanging(string value);
    partial void Onprofile_image_urlChanged();
    partial void Onfollower_countChanging(System.Nullable<int> value);
    partial void Onfollower_countChanged();
    partial void Onenglish_similarityChanging(System.Nullable<double> value);
    partial void Onenglish_similarityChanged();
    #endregion
		
		public Twuser()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_twitter_user_id", DbType="BigInt")]
		public System.Nullable<long> twitter_user_id
		{
			get
			{
				return this._twitter_user_id;
			}
			set
			{
				if ((this._twitter_user_id != value))
				{
					this.Ontwitter_user_idChanging(value);
					this.SendPropertyChanging();
					this._twitter_user_id = value;
					this.SendPropertyChanged("twitter_user_id");
					this.Ontwitter_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_screen_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string screen_name
		{
			get
			{
				return this._screen_name;
			}
			set
			{
				if ((this._screen_name != value))
				{
					this.Onscreen_nameChanging(value);
					this.SendPropertyChanging();
					this._screen_name = value;
					this.SendPropertyChanged("screen_name");
					this.Onscreen_nameChanged();
				}
			}
		}
		
		[Column(Storage="_lang", DbType="NVarChar(50)")]
		public string lang
		{
			get
			{
				return this._lang;
			}
			set
			{
				if ((this._lang != value))
				{
					this.OnlangChanging(value);
					this.SendPropertyChanging();
					this._lang = value;
					this.SendPropertyChanged("lang");
					this.OnlangChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_url", DbType="NVarChar(255)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[Column(Storage="_profile_image_url", DbType="NVarChar(255)")]
		public string profile_image_url
		{
			get
			{
				return this._profile_image_url;
			}
			set
			{
				if ((this._profile_image_url != value))
				{
					this.Onprofile_image_urlChanging(value);
					this.SendPropertyChanging();
					this._profile_image_url = value;
					this.SendPropertyChanged("profile_image_url");
					this.Onprofile_image_urlChanged();
				}
			}
		}
		
		[Column(Storage="_follower_count", DbType="Int")]
		public System.Nullable<int> follower_count
		{
			get
			{
				return this._follower_count;
			}
			set
			{
				if ((this._follower_count != value))
				{
					this.Onfollower_countChanging(value);
					this.SendPropertyChanging();
					this._follower_count = value;
					this.SendPropertyChanged("follower_count");
					this.Onfollower_countChanged();
				}
			}
		}
		
		[Column(Storage="_english_similarity", DbType="Float")]
		public System.Nullable<double> english_similarity
		{
			get
			{
				return this._english_similarity;
			}
			set
			{
				if ((this._english_similarity != value))
				{
					this.Onenglish_similarityChanging(value);
					this.SendPropertyChanging();
					this._english_similarity = value;
					this.SendPropertyChanged("english_similarity");
					this.Onenglish_similarityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
